---
import { Code2, BookOpen, Play, Bot, User, Award, CreditCard, Sparkles, Zap } from 'lucide-react';
import ModeToggle from "./mode-toggle";

const navigationItems = [
  {
    name: "Courses",
    href: "/courses",
    icon: BookOpen,
    description: "Learn with structured courses",
  },
  {
    name: "Docs",
    href: "/docs",
    icon: BookOpen,
    description: "Comprehensive documentation",
  },
  {
    name: "Playground",
    href: "/playground",
    icon: Play,
    description: "Code and experiment",
  },
  {
    name: "AI Tutor",
    href: "/ai/tutor",
    icon: Bot,
    description: "Get AI-powered help",
    badge: "New",
  },
];

const accountItems = [
  { name: "Profile", href: "/account/profile", icon: User },
  { name: "Certifications", href: "/account/certifications", icon: Award },
  { name: "Pricing", href: "/pricing", icon: CreditCard },
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-xl border-b border-gray-200/20 dark:border-gray-800/20 shadow-lg shadow-gray-900/5 transition-all duration-300">
  <div class="container mx-auto px-4 py-4">
    <nav class="flex items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center space-x-3 group cursor-pointer">
        <div class="relative">
          <div class="w-10 h-10 bg-gradient-to-br from-emerald-500 via-cyan-500 to-blue-500 rounded-xl flex items-center justify-center shadow-lg shadow-emerald-500/25 group-hover:scale-105 transition-transform duration-200">
            <Code2 className="w-5 h-5 text-white" />
          </div>
          <div class="absolute -top-1 -right-1 w-3 h-3 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full animate-pulse"></div>
        </div>
        <div>
          <span class="text-xl font-bold bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 dark:from-white dark:via-gray-100 dark:to-white bg-clip-text text-transparent">
            FrontendPro
          </span>
          <div class="flex items-center gap-1 -mt-1">
            <Sparkles className="w-3 h-3 text-emerald-500" />
            <span class="text-xs text-emerald-600 dark:text-emerald-400 font-medium">Pro</span>
          </div>
        </div>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-1">
        {navigationItems.map((item) => (
            <div class="relative group">
              <a
                  href={item.href}
                  class="flex items-center gap-2 px-4 py-2 rounded-xl text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-all duration-200 hover:bg-gray-100/50 dark:hover:bg-gray-800/50"
              >
                <item.icon className="w-4 h-4" />
                <span class="font-medium">{item.name}</span>
                {item.badge && (
                    <span class="px-2 py-0.5 text-xs font-medium bg-gradient-to-r from-emerald-500 to-cyan-500 text-white rounded-full">
                  {item.badge}
                </span>
                )}
              </a>
              <!-- Tooltip -->
              <div class="absolute top-full left-1/2 transform -translate-x-1/2 mt-2 px-3 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 text-sm rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10">
                {item.description}
                <div class="absolute -top-1 left-1/2 transform -translate-x-1/2 w-2 h-2 bg-gray-900 dark:bg-gray-100 rotate-45"></div>
              </div>
            </div>
        ))}

        <!-- Account Dropdown -->
        <div class="relative group">
          <button class="flex items-center gap-2 px-4 py-2 rounded-xl text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white transition-all duration-200 hover:bg-gray-100/50 dark:hover:bg-gray-800/50">
            <User className="w-4 h-4" />
            <span class="font-medium">Account</span>
            <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>

          <div class="absolute top-full right-0 mt-2 w-48 bg-white dark:bg-gray-900 rounded-xl shadow-xl border border-gray-200/20 dark:border-gray-800/20 backdrop-blur-xl overflow-hidden opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none group-hover:pointer-events-auto z-10">
            {accountItems.map((item) => (
                <a
                    href={item.href}
                    class="flex items-center gap-3 px-4 py-3 text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-800/50 transition-colors duration-200"
                >
                  <item.icon className="w-4 h-4" />
                  <span class="font-medium">{item.name}</span>
                </a>
            ))}
          </div>
        </div>
      </div>

      <!-- Right Side Actions -->
      <div class="flex items-center space-x-3">
        <div class="hidden lg:block">
          <ModeToggle client:only />
        </div>

        <a
            href="/login"
            class="hidden lg:inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-emerald-500/20 text-emerald-600 hover:bg-emerald-500 hover:text-white bg-emerald-50/50 dark:border-emerald-400/20 dark:text-emerald-400 dark:bg-emerald-950/20 dark:hover:bg-emerald-500 dark:hover:text-white transition-all duration-200 shadow-lg shadow-emerald-500/10 font-medium"
        >
          <Zap className="w-4 h-4" />
          Sign In
        </a>

        <!-- Mobile Menu Button -->
        <button
            id="mobile-menu-button"
            class="lg:hidden p-2 rounded-lg text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </nav>
  </div>
</header>

<!-- Mobile Menu -->
<div
    id="mobile-menu"
    class="fixed inset-0 z-40 lg:hidden transform translate-x-full transition-transform duration-300 ease-in-out"
>
  <!-- Backdrop -->
  <div class="absolute inset-0 bg-black/20 backdrop-blur-sm" id="mobile-menu-backdrop"></div>

  <!-- Menu Panel -->
  <div class="absolute top-0 right-0 h-full w-80 bg-white dark:bg-gray-900 shadow-2xl">
    <div class="flex flex-col h-full">
      <!-- Mobile Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-800">
        <div class="flex items-center space-x-3">
          <div class="w-8 h-8 bg-gradient-to-br from-emerald-500 via-cyan-500 to-blue-500 rounded-lg flex items-center justify-center">
            <Code2 className="w-4 h-4 text-white" />
          </div>
          <span class="text-lg font-bold text-gray-900 dark:text-white">FrontendPro</span>
        </div>
        <button
            id="mobile-menu-close"
            class="p-2 rounded-lg text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>

      <!-- Mobile Navigation -->
      <div class="flex-1 overflow-y-auto p-6">
        <div class="space-y-2">
          {navigationItems.map((item) => (
              <a
                  href={item.href}
                  class="flex items-center gap-3 p-3 rounded-xl text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
              >
                <item.icon className="w-5 h-5" />
                <div class="flex-1">
                  <div class="flex items-center gap-2">
                    <span class="font-medium">{item.name}</span>
                    {item.badge && (
                        <span class="px-2 py-0.5 text-xs font-medium bg-gradient-to-r from-emerald-500 to-cyan-500 text-white rounded-full">
                      {item.badge}
                    </span>
                    )}
                  </div>
                  <p class="text-sm text-gray-500 dark:text-gray-400">{item.description}</p>
                </div>
              </a>
          ))}

          <div class="border-t border-gray-200 dark:border-gray-800 my-4"></div>

          {accountItems.map((item) => (
              <a
                  href={item.href}
                  class="flex items-center gap-3 p-3 rounded-xl text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200"
              >
                <item.icon className="w-5 h-5" />
                <span class="font-medium">{item.name}</span>
              </a>
          ))}
        </div>
      </div>

      <!-- Mobile Footer -->
      <div class="p-6 border-t border-gray-200 dark:border-gray-800 space-y-4">
        <div class="flex items-center justify-between">
          <span class="text-sm text-gray-500 dark:text-gray-400">Theme</span>
          <ModeToggle />
        </div>
        <a
            href="/login"
            class="flex items-center justify-center gap-2 w-full px-4 py-3 rounded-xl bg-gradient-to-r from-emerald-500 to-cyan-500 hover:from-emerald-600 hover:to-cyan-600 text-white shadow-lg font-medium transition-all duration-200"
        >
          <Zap className="w-4 h-4" />
          Sign In
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Spacer for fixed header -->
<div class="h-20"></div>

<script>
  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenuBackdrop = document.getElementById('mobile-menu-backdrop');

  function openMobileMenu() {
    mobileMenu?.classList.remove('translate-x-full');
    document.body.style.overflow = 'hidden';
  }

  function closeMobileMenu() {
    mobileMenu?.classList.add('translate-x-full');
    document.body.style.overflow = '';
  }

  mobileMenuButton?.addEventListener('click', openMobileMenu);
  mobileMenuClose?.addEventListener('click', closeMobileMenu);
  mobileMenuBackdrop?.addEventListener('click', closeMobileMenu);

  // Close mobile menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      closeMobileMenu();
    }
  });

  // Header scroll effect
  let lastScrollY = window.scrollY;
  const header = document.querySelector('header');

  window.addEventListener('scroll', () => {
    const currentScrollY = window.scrollY;

    if (currentScrollY > 10) {
      header?.classList.add('scrolled');
    } else {
      header?.classList.remove('scrolled');
    }

    lastScrollY = currentScrollY;
  });
</script>

