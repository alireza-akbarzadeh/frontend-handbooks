---
export interface Props {
  title: string;
  description: string;
  icon: 'eye' | 'mouse' | 'brain' | 'shield';
  variant: 'blue' | 'emerald' | 'purple' | 'amber';
  details: string;
}

const { title, description, icon, variant, details } = Astro.props;

const iconSvgs = {
  eye: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />`,
  mouse: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122" />`,
  brain: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />`,
  shield: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />`,
};

const variantClasses = {
  blue: 'from-blue-500/20 to-blue-500/0 border-blue-500/20 text-blue-600 dark:text-blue-400',
  emerald:
    'from-emerald-500/20 to-emerald-500/0 border-emerald-500/20 text-emerald-600 dark:text-emerald-400',
  purple:
    'from-purple-500/20 to-purple-500/0 border-purple-500/20 text-purple-600 dark:text-purple-400',
  amber:
    'from-amber-500/20 to-amber-500/0 border-amber-500/20 text-amber-600 dark:text-amber-400',
};
---

<div
  class="group relative overflow-hidden rounded-2xl border border-border/40 bg-gradient-to-br p-6 backdrop-blur-3xl hover:shadow-lg transition-all duration-300 hover:-translate-y-1"
>
  <div
    class={`absolute inset-0 bg-gradient-to-br ${variantClasses[variant]} opacity-50`}
  >
  </div>

  <div class="relative z-10">
    <div
      class="mb-4 inline-flex h-12 w-12 items-center justify-center rounded-xl bg-white/10 backdrop-blur-sm"
    >
      <svg
        class={`h-6 w-6 ${variantClasses[variant].split(' ')[2]}`}
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <!-- <Fragment set:html={iconSvgs[icon]} /> -->
      </svg>
    </div>

    <h3 class="text-xl font-semibold mb-2">{title}</h3>
    <p class="text-slate-600 dark:text-slate-300 mb-3">{description}</p>
    <p class="text-sm text-slate-500 dark:text-slate-400">{details}</p>
  </div>
</div>
